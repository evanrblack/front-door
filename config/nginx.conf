# app server
# use ip + port if nginx on separate server
upstream front-door {
  server unix:///home/deploy/apps/front-door/shared/tmp/sockets/puma.sock;
}

# http://(www.)? to https://
# also letsencrypt
server {
  listen 80;
  server_name myfrontdoor.co www.myfrontdoor.co;

  # for letsencrypt challenge
  location /.well-known/acme-challenge {
    alias /home/deploy/letsencrypt/.well-known/acme-challenge;
  }

  # redirect to ssl/tls non www
  location / {
    return 301 https://myfrontdoor.co$request_uri;
  }
}

# https://www. -> https://
server {
  listen 443 ssl;
  server_name www.myfrontdoor.co;
  return 301 https://myfrontdoor.co$request_uri; 

  # tls config
  include /home/deploy/apps/front-door/current/config/nginx.tls.conf;
}

# ssl/tls config
server {
  listen 443 ssl;
  server_name myfrontdoor.co;
 
  # tls config
  include /home/deploy/apps/front-door/current/config/nginx.tls.conf;
 
  # log locations
  root /home/deploy/apps/front-door/current/public;
  access_log /home/deploy/apps/front-door/current/log/nginx.access.log;
  error_log /home/deploy/apps/front-door/current/log/nginx.error.log;

   
  # Enable gzip for page content
  gzip on;

  # First try for static, then hit the app server
  try_files $uri/index.html $uri @front-door;

  # Enable gzip and caching for static assets
  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
    break;
  }

  # Proxying to app server
  location @front-door {
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;

    proxy_pass http://front-door;
  }

  # Internal server error
  error_page 500 502 503 504 /500.html;

  # For big uploads
  client_max_body_size 10M;

  # For slow connections
  keepalive_timeout 30s;
}

